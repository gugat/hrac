{
  "swagger": "2.0",
  "info": {
    "title": "API V1",
    "version": "v1"
  },
  "securityDefinitions": {
    "client": {
      "type": "apiKey",
      "name": "client",
      "in": "header"
    },
    "access-token": {
      "type": "apiKey",
      "name": "access-token",
      "in": "header"
    },
    "uid": {
      "type": "apiKey",
      "name": "uid",
      "in": "header"
    }
  },
  "definitions": {
  },
  "paths": {
    "/employees/{employee_id}/assistances": {
      "get": {
        "summary": "List employee assistances",
        "tags": [
          "Assistances"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "type": "string",
            "require": true,
            "required": true
          },
          {
            "name": "access-token",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "token_type",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "client",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "expiry",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return multiple employee assistances",
            "schema": {
              "$ref": "http://localhost:3000/api-docs/v1/schemas/assistances_response"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": "1",
                    "type": "assistance",
                    "attributes": {
                      "kind": "in",
                      "happening_at": "2019-03-05T00:00:00-03:00"
                    },
                    "relationships": {
                      "employee": {
                        "data": {
                          "id": "10",
                          "type": "employee"
                        }
                      }
                    }
                  },
                  {
                    "id": "2",
                    "type": "assistance",
                    "attributes": {
                      "kind": "in",
                      "happening_at": "2019-03-05T00:00:00-03:00"
                    },
                    "relationships": {
                      "employee": {
                        "data": {
                          "id": "10",
                          "type": "employee"
                        }
                      }
                    }
                  },
                  {
                    "id": "3",
                    "type": "assistance",
                    "attributes": {
                      "kind": "in",
                      "happening_at": "2019-03-05T00:00:00-03:00"
                    },
                    "relationships": {
                      "employee": {
                        "data": {
                          "id": "10",
                          "type": "employee"
                        }
                      }
                    }
                  },
                  {
                    "id": "4",
                    "type": "assistance",
                    "attributes": {
                      "kind": "in",
                      "happening_at": "2019-03-05T00:00:00-03:00"
                    },
                    "relationships": {
                      "employee": {
                        "data": {
                          "id": "10",
                          "type": "employee"
                        }
                      }
                    }
                  },
                  {
                    "id": "5",
                    "type": "assistance",
                    "attributes": {
                      "kind": "in",
                      "happening_at": "2019-03-05T00:00:00-03:00"
                    },
                    "relationships": {
                      "employee": {
                        "data": {
                          "id": "10",
                          "type": "employee"
                        }
                      }
                    }
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Employee not found",
            "schema": {
              "$ref": "http://localhost:3000/api-docs/v1/schemas/errors"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "title": "Record not found",
                    "detail": "Couldn't find Employee with 'id'=2000",
                    "code": "404"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Not authorized to list assistances",
            "schema": {
              "$ref": "http://localhost:3000/api-docs/v1/schemas/errors"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "title": "Authorization error",
                    "detail": "You are not authorized to perform this action",
                    "code": "403"
                  }
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add new assistance",
        "tags": [
          "Assistances"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access-token",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "token_type",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "client",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "expiry",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "employee_id",
            "in": "path",
            "type": "string",
            "require": true,
            "required": true
          },
          {
            "name": "assistance",
            "in": "body",
            "require": true,
            "schema": {
              "$ref": "http://localhost:3000/api-docs/v1/schemas/assistance_request"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Assistance created",
            "schema": {
              "$ref": "http://localhost:3000/api-docs/v1/schemas/assistance_response"
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": "21",
                  "type": "assistance",
                  "attributes": {
                    "kind": "in",
                    "happening_at": "2019-03-05T15:05:57-03:00"
                  },
                  "relationships": {
                    "employee": {
                      "data": {
                        "id": "17",
                        "type": "employee"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "http://localhost:3000/api-docs/v1/schemas/errors"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "title": "Invalid record parameters",
                    "detail": "Validation failed: Kind can't be blank",
                    "code": "422"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/employees/{employee_id}": {
      "get": {
        "summary": "Find an employee by id",
        "tags": [
          "Employees"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "access-token",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "token_type",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "client",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "expiry",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single employee",
            "schema": {
              "$ref": "http://localhost:3000/api-docs/v1/schemas/employee_response"
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": "24",
                  "type": "employee",
                  "attributes": {
                    "first_name": "Jade",
                    "last_name": "Spencer",
                    "email": "youlandatorphy@carroll.org"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Employee not found",
            "schema": {
              "$ref": "http://localhost:3000/api-docs/v1/schemas/errors"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "title": "Record not found",
                    "detail": "Couldn't find Employee with 'id'=2000",
                    "code": "404"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Not authorized to see an employee",
            "schema": {
              "$ref": "http://localhost:3000/api-docs/v1/schemas/errors"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "title": "Authorization error",
                    "detail": "You are not authorized to perform this action",
                    "code": "403"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/employees": {
      "get": {
        "summary": "List employees",
        "tags": [
          "Employees"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access-token",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "token_type",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "client",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "expiry",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return multiple employees",
            "schema": {
              "$ref": "http://localhost:3000/api-docs/v1/schemas/employees_response"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": "38",
                    "type": "employee",
                    "attributes": {
                      "first_name": "Celestina",
                      "last_name": "Tremblay",
                      "email": "margarito@balistreri.biz"
                    }
                  },
                  {
                    "id": "39",
                    "type": "employee",
                    "attributes": {
                      "first_name": "Alta",
                      "last_name": "Goodwin",
                      "email": "emiledonnelly@bahringer.info"
                    }
                  },
                  {
                    "id": "40",
                    "type": "employee",
                    "attributes": {
                      "first_name": "Deanna",
                      "last_name": "Bednar",
                      "email": "myriamvonrueden@pollichdare.net"
                    }
                  },
                  {
                    "id": "41",
                    "type": "employee",
                    "attributes": {
                      "first_name": "Dian",
                      "last_name": "Heathcote",
                      "email": "lesleyhartmann@treutel.com"
                    }
                  },
                  {
                    "id": "42",
                    "type": "employee",
                    "attributes": {
                      "first_name": "Stanford",
                      "last_name": "Langosh",
                      "email": "ileana@franecki.net"
                    }
                  },
                  {
                    "id": "43",
                    "type": "employee",
                    "attributes": {
                      "first_name": "Betsey",
                      "last_name": "Littel",
                      "email": "judeleuschke@stammhackett.info"
                    }
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Not authorized to list employees",
            "schema": {
              "$ref": "http://localhost:3000/api-docs/v1/schemas/errors"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "title": "Authorization error",
                    "detail": "You are not authorized to perform this action",
                    "code": "403"
                  }
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new employee",
        "tags": [
          "Employees"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access-token",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "token_type",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "client",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "expiry",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "employee",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "http://localhost:3000/api-docs/v1/schemas/employee_request"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Employee created",
            "schema": {
              "$ref": "http://localhost:3000/api-docs/v1/schemas/employee_response"
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": "56",
                  "type": "employee",
                  "attributes": {
                    "first_name": "Gus",
                    "last_name": "Sal",
                    "email": "gussal@example.com"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "http://localhost:3000/api-docs/v1/schemas/errors"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "title": "Invalid record parameters",
                    "detail": "Validation failed: Last name can't be blank",
                    "code": "422"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Not authorized to create an employee",
            "schema": {
              "$ref": "http://localhost:3000/api-docs/v1/schemas/errors"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "title": "Authorization error",
                    "detail": "You are not authorized to perform this action",
                    "code": "403"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/reports/{employee_id}/journeys?start_date={start_date}&end_date={end_date}": {
      "get": {
        "summary": "Get journey by employee",
        "tags": [
          "Reports"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "start_date",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "end_date",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "access-token",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "token_type",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "client",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "expiry",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns journes by employee in the given date range",
            "schema": {
              "$ref": "http://localhost:3000/api-docs/v1/schemas/journeys_response"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": "d03a870e9c62cf293ad1999a72add940",
                    "type": "journey",
                    "attributes": {
                      "day": "2019-03-05",
                      "assistances": [
                        {
                          "type": "entry",
                          "time": "08:00"
                        },
                        {
                          "type": "exit",
                          "time": "13:00"
                        },
                        {
                          "type": "entry",
                          "time": "15:00"
                        },
                        {
                          "type": "exit",
                          "time": "18:00"
                        }
                      ],
                      "anomalies": {
                        "absence": false,
                        "arrived_late": false,
                        "worked_too_short": false,
                        "finished_too_early": false,
                        "incomplete_assistances": false
                      },
                      "worked_hours": 8.0
                    }
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Employee not found",
            "schema": {
              "$ref": "http://localhost:3000/api-docs/v1/schemas/errors"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "title": "Record not found",
                    "detail": "Couldn't find Employee with 'id'=2000",
                    "code": "404"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Not authorized to see an employee",
            "schema": {
              "$ref": "http://localhost:3000/api-docs/v1/schemas/errors"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "title": "Authorization error",
                    "detail": "You are not authorized to perform this action",
                    "code": "403"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/auth/sign_in": {
      "post": {
        "summary": "Login employee",
        "tags": [
          "Authentication"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "employee_login",
            "in": "body",
            "schema": {
              "$ref": "http://localhost:3000/api-docs/v1/schemas/employee_login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns employee authenticated",
            "schema": {
              "$ref": "http://localhost:3000/api-docs/v1/schemas/employee_response"
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": "75",
                  "type": "employee",
                  "attributes": {
                    "first_name": "Brendan",
                    "last_name": "Anderson",
                    "email": "kristopherlegros@friesen.biz"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Returns bad credentials message",
            "schema": {
              "$ref": "http://localhost:3000/api-docs/v1/schemas/errors"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "title": "Bad authentication",
                    "detail": "Invalid login credentials",
                    "code": "401"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/auth/sign_out": {
      "delete": {
        "summary": "Logout employee",
        "tags": [
          "Authentication"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access-token",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "token_type",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "client",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "expiry",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Logouts user",
            "schema": {
              "$ref": "http://localhost:3000/api-docs/v1/schemas/meta"
            },
            "examples": {
              "application/json": {
                "meta": {
                  "copyright": "Copyright 2019 RHA Corp",
                  "author": [
                    "Guga Salazar"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Returns bad credentials message",
            "schema": {
              "$ref": "http://localhost:3000/api-docs/v1/schemas/errors"
            },
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "title": "Bad credentials",
                    "detail": "User was not found or was not logged in",
                    "code": "404"
                  }
                ]
              }
            }
          }
        }
      }
    }
  }
}